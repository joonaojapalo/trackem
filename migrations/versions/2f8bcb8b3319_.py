"""empty message

Revision ID: 2f8bcb8b3319
Revises: 74a0b8024c7c
Create Date: 2016-03-02 09:09:22.334000

"""

# revision identifiers, used by Alembic.
revision = '2f8bcb8b3319'
down_revision = '74a0b8024c7c'

from alembic import op
import sqlalchemy as sa


# define enums
enums = {
    "user_confirmation_target_enum": sa.Enum("email", "password", "account", name="user_confirmation_target_enum"),
    "map_status_enum": sa.Enum("new", "ready", "deleted", name="map_status_enum"),
    "race_status_enum": sa.Enum("stopped", "started", "deleted", name="race_status_enum"),
    "race_control_enum": sa.Enum("start", "control", "finish", name="race_control_enum"),
    "trace_status_enum": sa.Enum("new", "accept", "reject", name="trace_status_enum")
}


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_tiles', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('new', 'ready', 'deleted', name='map_status_enum'), nullable=False),
    sa.Column('loc_1_lat', sa.Float(), nullable=True),
    sa.Column('loc_1_lon', sa.Float(), nullable=True),
    sa.Column('loc_1_x', sa.Float(), nullable=True),
    sa.Column('loc_1_y', sa.Float(), nullable=True),
    sa.Column('loc_2_lat', sa.Float(), nullable=True),
    sa.Column('loc_2_lon', sa.Float(), nullable=True),
    sa.Column('loc_2_x', sa.Float(), nullable=True),
    sa.Column('loc_2_y', sa.Float(), nullable=True),
    sa.Column('loc_3_lat', sa.Float(), nullable=True),
    sa.Column('loc_3_lon', sa.Float(), nullable=True),
    sa.Column('loc_3_x', sa.Float(), nullable=True),
    sa.Column('loc_3_y', sa.Float(), nullable=True),
    sa.Column('map', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['map'], ['map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_map_created'), 'map', ['created'], unique=False)
    op.create_index(op.f('ix_map_name'), 'map', ['name'], unique=False)
    op.create_table('map_tile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=True),
    sa.Column('y', sa.Integer(), nullable=True),
    sa.Column('z', sa.Integer(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_map_tile_x'), 'map_tile', ['x'], unique=False)
    op.create_index(op.f('ix_map_tile_y'), 'map_tile', ['y'], unique=False)
    op.create_index(op.f('ix_map_tile_z'), 'map_tile', ['z'], unique=False)
    op.create_table('race',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('stopped', 'started', 'deleted', name='race_status_enum'), nullable=False),
    sa.Column('start_time', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_race_code'), 'race', ['code'], unique=False)
    op.create_index(op.f('ix_race_created'), 'race', ['created'], unique=False)
    op.create_index(op.f('ix_race_name'), 'race', ['name'], unique=False)
    op.create_table('race_control',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('start', 'control', 'finish', name='race_control_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('date', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(), nullable=False),
    sa.Column('vat', sa.DECIMAL(), nullable=False),
    sa.Column('item', sa.String(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trace',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('runner_hash', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('new', 'accept', 'reject', name='trace_status_enum'), nullable=False),
    sa.Column('race', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['race'], ['race.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trace_runner_hash'), 'trace', ['runner_hash'], unique=True)
    op.create_table('user_confirmation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('expires', sa.Integer(), nullable=False),
    sa.Column('target', sa.Enum('email', 'password', 'account', name='user_confirmation_target_enum'), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_confirmation_user'), 'user_confirmation', ['user'], unique=False)
    op.create_table('user_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('added', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('group', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_group_group'), 'user_group', ['group'], unique=False)
    op.create_index(op.f('ix_user_group_user'), 'user_group', ['user'], unique=False)
    op.create_table('license',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issued', sa.Integer(), nullable=False),
    sa.Column('expires', sa.Integer(), nullable=False),
    sa.Column('receipt', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receipt'], ['receipt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_license_expires'), 'license', ['expires'], unique=False)
    op.create_index(op.f('ix_license_issued'), 'license', ['issued'], unique=False)
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('receipt', sa.Integer(), nullable=True),
    sa.Column('licence', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['licence'], ['receipt.id'], ),
    sa.ForeignKeyConstraint(['receipt'], ['receipt.id'], ),
    sa.ForeignKeyConstraint(['user'], ['receipt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trace_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trace', sa.Integer(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['trace'], ['trace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'user', sa.Column('created', sa.Float(), nullable=True))
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'user', 'created')
    op.drop_table('trace_location')
    op.drop_table('payment')
    op.drop_index(op.f('ix_license_issued'), table_name='license')
    op.drop_index(op.f('ix_license_expires'), table_name='license')
    op.drop_table('license')
    op.drop_index(op.f('ix_user_group_user'), table_name='user_group')
    op.drop_index(op.f('ix_user_group_group'), table_name='user_group')
    op.drop_table('user_group')
    op.drop_index(op.f('ix_user_confirmation_user'), table_name='user_confirmation')
    op.drop_table('user_confirmation')
    op.drop_index(op.f('ix_trace_runner_hash'), table_name='trace')
    op.drop_table('trace')
    op.drop_table('receipt')
    op.drop_table('runner')
    op.drop_table('race_control')
    op.drop_index(op.f('ix_race_name'), table_name='race')
    op.drop_index(op.f('ix_race_created'), table_name='race')
    op.drop_index(op.f('ix_race_code'), table_name='race')
    op.drop_table('race')
    op.drop_index(op.f('ix_map_tile_z'), table_name='map_tile')
    op.drop_index(op.f('ix_map_tile_y'), table_name='map_tile')
    op.drop_index(op.f('ix_map_tile_x'), table_name='map_tile')
    op.drop_table('map_tile')
    op.drop_index(op.f('ix_map_name'), table_name='map')
    op.drop_index(op.f('ix_map_created'), table_name='map')
    op.drop_table('map')
    op.drop_table('group')
    ### end Alembic commands ###

    # dropenums
    for enum in enums.values():
        enum.drop(op.get_bind())

