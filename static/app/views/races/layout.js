// Generated by CoffeeScript 1.10.0
(function() {
  define(["radio", "underscore", "marionette", "text!templates/races/layout", "views/races/races", "views/races/runners", "views/races/player", "app/state", "views/races/create-race-layout"], function(Radio, _, Marionette, template, RacesView, RunnersView, RacePlayerView, state, CreateRaceLayout) {
    var RacesLayout;
    return RacesLayout = Marionette.LayoutView.extend({
      template: template,
      regions: {
        racesRegion: '[data-region="races"]',
        racePlayerRegion: '[data-region="race-player"]',
        runnersRegion: '[data-region="race-runners"]',
        createRaceRegion: '[data-region="create-race"]'
      },
      initialize: function(options) {
        _.bindAll(this, "selectRace");
        this.mergeOptions(options, ["races", "runners", "raceId"]);
        return (Radio.channel("races")).on("select", this.selectRace);
      },
      onBeforeShow: function() {
        var race;
        this.runnersRegion.show(new RunnersView({
          runners: this.runners
        }));
        this.createRaceRegion.show(new CreateRaceLayout);
        this.racesRegion.show(new RacesView({
          collection: this.races
        }));
        race = this.getRace();
        if (race) {
          return this.selectRace(race);
        }
      },
      getRace: function() {
        if (!this.raceId) {
          return this.races.at(0);
        } else {
          return this.races.findWhere({
            id: this.raceId
          });
        }
      },
      selectRace: function(race) {
        return this.racePlayerRegion.show(new RacePlayerView({
          model: race
        }));
      }
    });
  });

}).call(this);
