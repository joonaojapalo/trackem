// Generated by CoffeeScript 1.10.0
(function() {
  define(["radio", "underscore", "marionette", "text!templates/races/layout", "views/races/races", "views/races/runners", "views/races/player", "app/state", "views/races/create-race-layout", "stores/races"], function(Radio, _, Marionette, template, RacesView, RunnersView, RacePlayerView, state, CreateRaceLayout, racesStore) {
    var RacesLayout;
    return RacesLayout = Marionette.LayoutView.extend({
      template: template,
      regions: {
        racesRegion: '[data-region="races"]',
        racePlayerRegion: '[data-region="race-player"]',
        runnersRegion: '[data-region="race-runners"]',
        createRaceRegion: '[data-region="create-race"]'
      },
      initialize: function(options) {
        _.bindAll(this, "onDataFetch", "onSelectRace");
        return this.mergeOptions(options, ["runners"]);
      },
      destroy: function() {
        return (Radio.channel("races")).off("select");
      },
      onBeforeShow: function() {
        racesStore.fetch().done(this.onDataFetch);
        this.runnersRegion.show(new RunnersView({
          runners: this.runners
        }));
        return this.createRaceRegion.show(new CreateRaceLayout);
      },
      onDataFetch: function(races) {
        var defaultRace;
        this.races = races;
        this.racesRegion.show(new RacesView({
          collection: races
        }));
        (Radio.channel("races")).on("select", this.onSelectRace);
        defaultRace = races.at(0);
        return this.onSelectRace(defaultRace.get("id"));
      },
      onSelectRace: function(raceId) {
        return this.racePlayerRegion.show(new RacePlayerView({
          model: this.races.findWhere({
            id: raceId
          })
        }));
      }
    });
  });

}).call(this);
